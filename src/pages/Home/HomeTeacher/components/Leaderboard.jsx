import React, { useState, useEffect } from "react";
import Dropdown from "./Dropdown";
import { useTranslation } from "react-i18next";

const Leaderboard = ({ leaders = [] }) => {
    const { t } = useTranslation();
    const [selectedGroup, setSelectedGroup] = useState(t("HomeTeacher.Leaderboard.all_groups"));
    const [filteredLeaders, setFilteredLeaders] = useState([]);

    const groups = [t("HomeTeacher.Leaderboard.all_groups"), ...new Set(leaders.map((leader) => leader.group))];

    useEffect(() => {
        const getFilteredLeaders = () => {
            let filtered;
            if (selectedGroup === t("HomeTeacher.Leaderboard.all_groups")) {
                filtered = Array.from(new Map(leaders.map((leader) => [leader.email, leader])).values());
            } else {
                filtered = leaders.filter((leader) => leader.group === selectedGroup);
            }
            return filtered.sort((a, b) => (b.trophies || 0) - (a.trophies || 0));
        };
        setFilteredLeaders(getFilteredLeaders());
    }, [leaders, selectedGroup, t]);

    return (
        <div className="flex-1 bg-white p-3 sm:p-4 rounded-[20px] shadow-md h-full overflow-hidden leaders">
            <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-2 mb-2">
                <div
                    className="text-base sm:text-lg md:text-xl font-semibold w-auto pl-0 sm:pl-3"
                    style={{
                        fontFamily: "Nunito",
                        fontWeight: "700",
                        lineHeight: "1.35",
                        letterSpacing: "-0.5%",
                        color: "#120C38",
                    }}
                >
                    {t("HomeTeacher.Leaderboard.title")}
                </div>
                <div className="w-full sm:w-auto max-w-[200px] mobile-dropdown-teacher">
                    <Dropdown
                        textAll={t("HomeTeacher.Leaderboard.all_groups")}
                        options={groups.filter((group) => group !== t("HomeTeacher.Leaderboard.all_groups"))}
                        onSelect={(group) => setSelectedGroup(group)}
                    />
                </div>
            </div>
            <ol className="mt-2 sm:mt-4 overflow-y-auto h-[calc(100%-60px)] pl-1 sm:pl-4">
                {filteredLeaders.length > 0 ? (
                    filteredLeaders.map((leader, index) => (
                        <li
                            key={leader.email}
                            className="mb-2 px-1 sm:px-2 flex items-center justify-between"
                        >
                            <div className="flex items-center">
                                <div
                                    className="w-5 h-5 rounded-full flex items-center justify-center mr-2"
                                    style={{
                                        backgroundColor:
                                            index === 0
                                                ? "#120C38"
                                                : index === 1
                                                    ? "#8A48E6"
                                                    : index === 2
                                                        ? "#88F2FF"
                                                        : "transparent",
                                        color: index < 3 ? "white" : "#120C38",
                                        fontWeight: "600",
                                        fontSize: "12px",
                                        fontFamily: "Mulish",
                                    }}
                                >
                                    {index + 1}
                                </div>
                                <img
                                    src={
                                        leader.image
                                            ? leader.image
                                            : `https://ui-avatars.com/api/?name=${leader.name}&background=random&size=86`
                                    }
                                    alt={t("HomeTeacher.Leaderboard.profile_alt")}
                                    onError={(e) => {
                                        e.target.src = `https://ui-avatars.com/api/?name=${leader.name}&background=random&size=86`;
                                    }}
                                    className="w-6 h-6 sm:w-8 sm:h-8 object-cover rounded-full mr-2 border border-gray-300"
                                />
                                <div
                                    className="text-xs sm:text-sm md:text-base truncate max-w-[100px] sm:max-w-[150px] md:max-w-none"
                                    style={{
                                        fontFamily: "Mulish",
                                        fontWeight: index === 0 ? "700" : "400",
                                        letterSpacing: "-0.5%",
                                        color: "#120C38",
                                    }}
                                >
                                    {leader.name}
                                </div>
                            </div>
                            <div className="flex items-center">
                                <span
                                    className="mr-2 text-xs sm:text-sm"
                                    style={{
                                        fontFamily: "Mulish",
                                        fontWeight: "600",
                                        color: "#120C38",
                                    }}
                                >
                                    {leader.trophies || 0}
                                </span>
                                <div className="w-4 h-4 sm:w-5 sm:h-5">
                                    <svg
                                        width="20"
                                        height="20"
                                        viewBox="0 12 635 465"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg"
                                        style={{ width: "100%", height: "100%" }}
                                    >
                                        <path d="M478.531 252.01C468.101 252.01 458.611 247.54 452.481 239.74C445.921 231.4 443.971 219.98 446.981 207.59C455.941 170.73 485.311 165.47 502.861 162.33C505.461 161.86 507.911 161.42 510.011 160.94C544.831 152.96 566.561 141.83 574.611 127.83C578.321 121.37 578.931 114.41 576.481 106.54C570.661 87.8701 560.491 87.8701 557.141 87.8701C551.191 87.8701 545.091 90.3701 541.031 92.4601C539.511 93.2401 538.801 95.1001 539.431 96.6901C545.651 112.54 539.481 119.23 535.251 121.81C529.901 125.07 524.881 126.72 520.331 126.72C510.461 126.72 504.841 119.21 503.031 112.78C503.001 112.68 502.971 112.59 502.941 112.5L496.311 94.3101C493.631 86.9701 496.541 78.6901 503.211 74.6301L511.501 69.5801C512.291 69.1001 512.841 68.3401 513.061 67.4501L515.241 58.4701C517.041 51.0701 523.611 45.9001 531.221 45.9001C532.531 45.9001 533.841 46.0601 535.111 46.3701L557.231 51.7501C557.501 51.8101 557.771 51.8501 558.041 51.8501C559.061 51.8501 560.021 51.4001 560.671 50.6301L561.501 49.6501C564.631 45.9501 569.211 43.8201 574.061 43.8201C577.941 43.8201 581.711 45.2001 584.681 47.7101L599.821 60.5201C600.441 61.0501 601.231 61.3401 602.051 61.3401C602.311 61.3401 602.571 61.3101 602.821 61.2501C604.031 60.9701 605.281 60.8301 606.511 60.8301C615.511 60.8301 622.881 68.1601 622.941 77.1801L623.041 92.2401C623.041 93.2501 623.491 94.2001 624.261 94.8501L627.451 97.5401C633.661 102.79 635.081 111.95 630.761 118.84L625.551 127.14C624.851 128.25 624.841 129.64 625.531 130.77L627.451 133.93C630.021 138.16 630.561 143.26 628.921 147.93C627.281 152.6 623.681 156.25 619.031 157.94L609.111 161.56C608.021 161.96 607.211 162.86 606.941 163.99L604.381 174.5C602.701 181.39 596.831 186.42 589.761 187.01L576.521 188.12C575.601 188.2 574.771 188.63 574.171 189.33L569.581 194.76C566.451 198.46 561.871 200.59 557.021 200.59C555.711 200.59 554.411 200.43 553.131 200.12L542.431 197.52C542.161 197.46 541.891 197.42 541.611 197.42C540.591 197.42 539.631 197.87 538.981 198.64L535.701 202.52C532.571 206.22 527.991 208.35 523.141 208.35C521.831 208.35 520.531 208.19 519.251 207.88L508.541 205.28C508.271 205.22 508.001 205.18 507.721 205.18C506.701 205.18 505.741 205.63 505.091 206.4L502.471 209.5C501.511 210.64 501.391 212.25 502.161 213.52L506.551 220.74C510.311 226.91 509.671 234.66 504.971 240.02C498.281 247.65 488.631 252.03 478.511 252.03L478.531 252.01Z" fill="#DB972A" />

                                        <path d="M161.2 252.01C151.08 252.01 141.44 247.63 134.74 240C130.04 234.64 129.4 226.89 133.16 220.72L137.55 213.5C138.32 212.23 138.2 210.61 137.24 209.48L134.62 206.38C133.96 205.6 133 205.16 131.99 205.16C131.72 205.16 131.44 205.19 131.18 205.26L120.47 207.86C119.2 208.17 117.89 208.33 116.58 208.33C111.73 208.33 107.15 206.21 104.02 202.5L100.74 198.62C100.08 197.84 99.1204 197.4 98.1104 197.4C97.8404 197.4 97.5604 197.43 97.3004 197.5L86.5904 200.1C85.3204 200.41 84.0104 200.57 82.7004 200.57C77.8504 200.57 73.2704 198.45 70.1404 194.74L65.5504 189.31C64.9604 188.61 64.1204 188.18 63.2004 188.1L49.9604 186.99C42.8904 186.4 37.0204 181.37 35.3404 174.48L32.7804 163.97C32.5104 162.85 31.7004 161.94 30.6104 161.54L20.6904 157.92C16.0404 156.23 12.4404 152.58 10.8004 147.91C9.16036 143.24 9.70036 138.14 12.2704 133.91L14.1904 130.75C14.8704 129.63 14.8604 128.24 14.1704 127.12L8.96036 118.82C4.64036 111.93 6.06036 102.77 12.2704 97.52L15.4604 94.8301C16.2304 94.18 16.6804 93.23 16.6804 92.2201L16.7804 77.1601C16.8404 68.1501 24.2104 60.8101 33.2104 60.8101C34.4504 60.8101 35.6904 60.95 36.9004 61.23C37.1504 61.29 37.4104 61.32 37.6704 61.32C38.4804 61.32 39.2804 61.0301 39.9004 60.5L55.0404 47.69C58.0104 45.18 61.7804 43.8 65.6604 43.8C70.5104 43.8 75.0904 45.9201 78.2204 49.6301L79.0504 50.6101C79.7104 51.39 80.6704 51.8301 81.6804 51.8301C81.9504 51.8301 82.2304 51.8 82.4904 51.73L104.61 46.35C105.89 46.04 107.2 45.8801 108.5 45.8801C116.11 45.8801 122.68 51.0501 124.48 58.4501L126.66 67.43C126.87 68.31 127.44 69.09 128.22 69.56L136.51 74.6101C143.18 78.6701 146.09 86.9501 143.41 94.2901L136.78 112.48C136.74 112.58 136.71 112.67 136.69 112.75C134.88 119.18 129.26 126.69 119.39 126.69C114.84 126.69 109.82 125.04 104.47 121.78C100.24 119.2 94.0704 112.51 100.29 96.6601C100.91 95.0701 100.21 93.2201 98.6904 92.43C94.6204 90.34 88.5204 87.84 82.5804 87.84C79.2404 87.84 69.0604 87.84 63.2404 106.51C60.7904 114.38 61.4004 121.35 65.1104 127.8C73.1604 141.79 94.8904 152.93 129.71 160.91C131.81 161.39 134.26 161.83 136.86 162.3C154.41 165.44 183.78 170.7 192.74 207.56C195.75 219.95 193.8 231.36 187.24 239.71C181.11 247.51 171.62 251.98 161.19 251.98L161.2 252.01Z" fill="#EFC929" />

                                        <path d="M397.439 438.6C326.749 438.17 322.469 438.55 322.209 438.6H322.189C321.919 438.54 317.509 438.17 246.969 438.6C282.479 422.92 290.149 394.28 291.469 387.73C291.649 386.85 291.883 387.795 291.469 387.73C287.833 387.157 283.629 386.11 273.709 383.37C244.709 375.37 249.709 324.37 249.709 324.37L322.189 345.37H322.209L394.689 324.37C394.689 324.37 399.689 375.37 370.689 383.37C360.769 386.11 355.529 387.32 352.929 387.73C354 388.5 354 388.5 352.929 387.73C354.249 394.28 361.929 422.92 397.439 438.6Z" fill="#C2A321" />

                                        <path d="M490.361 60.41L477.111 148.8C469.441 199.89 450.671 248.68 422.111 291.73C414.471 303.24 404.931 313.22 393.991 321.29C383.041 329.37 370.691 335.54 357.441 339.44C345.211 343.04 332.591 344.84 319.971 344.84C311.131 344.84 302.291 343.96 293.591 342.19C289.861 341.44 286.161 340.52 282.501 339.44C275.871 337.49 269.471 334.97 263.361 331.93C257.251 328.89 251.431 325.33 245.951 321.29C235.011 313.22 225.471 303.24 217.831 291.73C189.271 248.68 170.501 199.89 162.831 148.8L149.581 60.41C148.351 52.25 153.071 44.37 160.841 41.59L168.781 38.76C188.391 31.76 208.471 26.23 228.871 22.22C242.111 19.62 255.481 17.66 268.931 16.35L307.081 12.63C315.651 11.79 324.291 11.79 332.861 12.63L371.011 16.35C405.191 19.68 438.821 27.21 471.161 38.76L479.101 41.59C486.871 44.37 491.591 52.25 490.361 60.41Z" fill="#EFC929" stroke="#99632F" stroke-width="24" stroke-miterlimit="10" />

                                        <path d="M234.469 423.37H405.469C420.369 423.37 432.469 435.47 432.469 450.37V477.37H207.469V450.37C207.469 435.47 219.569 423.37 234.469 423.37Z" fill="#8A48E6" stroke="#41267A" stroke-width="24" stroke-miterlimit="10" />
                                    </svg>
                                </div>
                            </div>
                        </li>
                    )
                    ))
                    :
                    <div
                        className="text-sm sm:text-base"
                        style={{
                            fontFamily: "Mulish",
                            letterSpacing: "-0.5%",
                            color: "#120C38",
                        }}
                    >
                        {t("HomeTeacher.Leaderboard.no_data")}
                    </div>}
            </ol>
        </div>
    );
};

export default Leaderboard;